name: IJKMediaPlayerKit

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Analyse-Publish
    runs-on: macos-14

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Read Tag Version
      run: |
        grep -m 1 VERSION_NAME= version.sh | awk -F = '{printf "TAG=%s",$2}' | xargs > constants.env
        cat constants.env
    - name: Export Env
      uses: cardinalby/export-env-action@v2
      with:
        envFile: 'constants.env'
    - run: brew install tree
    - name: Download Pre Compiled Dependencies
      run: |
        cd shell && ./install-pre-any.sh all all && cd -
    - name: Pod Install
      run: |
        pod install --project-directory=examples/ios
        pod install --project-directory=examples/macos
        pod install --project-directory=examples/tvos
    - name: Build iOS Framework
      run: cd examples/ios && ./build-framework.sh
    - name: Build macOS Framework      
      run: cd examples/macos && ./build-framework.sh
    - name: Build tvOS Framework
      run: cd examples/tvos && ./build-framework.sh
    - name: Make xcframework
      run: cd examples/xcframewrok && ./make-xcframework.sh
    - name: Zip Frameworks
      run: |
        dst=IJKMediaPlayerKit-${{ env.TAG }}
        mkdir -p $dst
        cp CHANGELOG.md $dst
        cp README.md $dst
        cp COPYING.LGPLv2.1 $dst
        cp -pPR examples/xcframewrok/IJKMediaPlayerKit.xcframework $dst
        cd $dst
        mv COPYING.LGPLv2.1 LICENSE
        zip -ryq IJKMediaPlayerKit-${{ env.TAG }}.zip ./*
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: k${{ env.TAG }}
        release_name: üëèüëè IJKMediaPlayerKit k${{ env.TAG }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: IJKMediaPlayerKit-${{ env.TAG }}/IJKMediaPlayerKit-${{ env.TAG }}.zip
        asset_name: "IJKMediaPlayerKit-${{ env.TAG }}.zip"
        asset_content_type: application/zip
    

    

