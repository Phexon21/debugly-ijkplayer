From 134e70adfd4add1ffb8ebfcc4cfb4f13ba2944ed Mon Sep 17 00:00:00 2001
From: qianlongxu <qianlongxu@gmail.com>
Date: Fri, 29 Jul 2022 13:00:17 +0800
Subject: [PATCH 09/16] network ff_sendto

---
 libavformat/network.c | 46 +++++++++++++++++++++++++++++++++++++++++++
 libavformat/network.h |  5 +++++
 2 files changed, 51 insertions(+)

diff --git a/libavformat/network.c b/libavformat/network.c
index d5c82e9..f44b124 100644
--- a/libavformat/network.c
+++ b/libavformat/network.c
@@ -293,6 +293,52 @@ int ff_listen_connect(int fd, const struct sockaddr *addr,
     return ret;
 }
 
+int ff_sendto(int fd, const char *msg, int msg_len, int flag,
+                      const struct sockaddr *addr,
+                      socklen_t addrlen, int timeout, URLContext *h,
+                      int will_try_next)
+{
+    struct pollfd p = {fd, POLLOUT, 0};
+    int ret;
+    socklen_t optlen;
+
+    if (ff_socket_nonblock(fd, 1) < 0)
+        av_log(NULL, AV_LOG_INFO, "ff_socket_nonblock failed\n");
+
+    while ((ret = sendto(fd, msg, msg_len, flag, addr, addrlen)) < 0) {
+        ret = ff_neterrno();
+        switch (ret) {
+        case AVERROR(EINTR):
+            if (ff_check_interrupt(&h->interrupt_callback))
+                return AVERROR_EXIT;
+            continue;
+        case AVERROR(EINPROGRESS):
+        case AVERROR(EAGAIN):
+            ret = ff_poll_interrupt(&p, 1, timeout, &h->interrupt_callback);
+            if (ret < 0)
+                return ret;
+            optlen = sizeof(ret);
+            if (getsockopt (fd, SOL_SOCKET, SO_ERROR, &ret, &optlen))
+                ret = AVUNERROR(ff_neterrno());
+            if (ret != 0) {
+                char errbuf[100];
+                ret = AVERROR(ret);
+                av_strerror(ret, errbuf, sizeof(errbuf));
+                if (will_try_next)
+                    av_log(h, AV_LOG_WARNING,
+                           "Connection to %s failed (%s), trying next address\n",
+                           h->filename, errbuf);
+                else
+                    av_log(h, AV_LOG_ERROR, "Connection to %s failed: %s\n",
+                           h->filename, errbuf);
+            }
+        default:
+            return ret;
+        }
+    }
+    return ret;
+}
+
 static int match_host_pattern(const char *pattern, const char *hostname)
 {
     int len_p, len_h;
diff --git a/libavformat/network.h b/libavformat/network.h
index e3fda4d..a9abd0e 100644
--- a/libavformat/network.h
+++ b/libavformat/network.h
@@ -300,6 +300,11 @@ int ff_listen_connect(int fd, const struct sockaddr *addr,
                       socklen_t addrlen, int timeout,
                       URLContext *h, int will_try_next);
 
+int ff_sendto(int fd, const char *msg, int msg_len, int flag,
+                      const struct sockaddr *addr,
+                      socklen_t addrlen, int timeout, URLContext *h,
+                      int will_try_next);
+
 int ff_http_match_no_proxy(const char *no_proxy, const char *hostname);
 
 int ff_socket(int domain, int type, int protocol);
-- 
2.30.1 (Apple Git-130)

